import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;

public class ListDuplicatingFiles {

	public static void main(String[] args) {

		String dir = "Some path";
		listFiles(dir);

	}

	public static void listFiles(String dir) {
		ArrayList<File> files = new ArrayList<File>();
		File directory = new File(dir);
		File[] fList = directory.listFiles();
		try {
			for (File file : fList) {
				if (file.isFile()) {
					files.add(file);
				} else if (file.isDirectory()) {
					listFiles(file.getAbsolutePath());
				}
			}
		} catch (NullPointerException e) {
			System.err.println("Directory does not exist!");
		}
		findDuplicateFiles(files);
	}

	public static void findDuplicateFiles(ArrayList<File> files) {
		for (int i = 0; i < files.size(); i++) {
			for (int k = 0; k < files.size(); k++) {
				if (i != k) {
					try {
						if (compareFiles(files.get(i), files.get(k)) == 1) {
							files.remove(k);
						}

					} catch (Exception e) {
						e.printStackTrace();
					}
				}
			}
		}
		printResult(files);
	}

	public static int compareFiles(File file1, File file2) throws Exception {

		FileReader f1 = new FileReader(file1);
		FileReader f2 = new FileReader(file2);

		BufferedReader buffer1 = new BufferedReader(f1);
		BufferedReader buffer2 = new BufferedReader(f2);

		String line1 = null;
		String line2 = null;
		int flag = 1;
		while ((flag == 1) && ((line1 = buffer1.readLine()) != null)
				&& ((line2 = buffer2.readLine()) != null)) {
			if (!line1.equalsIgnoreCase(line2))
				flag = 0;
			else
				flag = 1;
		}
		buffer1.close();
		buffer2.close();
		return flag;

	}

	public static void printResult(ArrayList<File> files) {
		for (File file : files) {
			System.out.print(file.getName() + ";  ");
		}
	}
	
}
